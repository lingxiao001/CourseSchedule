功能名称：用户注册
功能编号：02
所属模块：通用模块

==================================================
一、功能概述
==================================================
用户注册功能允许新用户在系统中创建账户。用户需要填写基本信息和选择角色（学生或教师），系统会进行信息验证和重复性检查，成功注册后发送激活邮件进行账户验证。

==================================================
二、功能输入
==================================================
必需参数：
- username（用户名）：字符串，长度3-50个字符，唯一性
- password（密码）：字符串，长度6-128个字符，需符合强度要求
- confirmPassword（确认密码）：与密码字段一致
- realName（真实姓名）：字符串，长度2-50个字符
- email（邮箱）：符合邮箱格式，唯一性
- phone（手机号）：11位数字，格式验证
- role（角色）：枚举值（STUDENT/TEACHER）

输入验证规则：
- 用户名：只能包含字母、数字、下划线
- 密码：至少包含大小写字母、数字，特殊字符之一
- 邮箱：符合标准邮箱格式
- 手机号：中国大陆手机号格式
- 真实姓名：中文或英文姓名格式

==================================================
三、功能输出
==================================================
注册成功：
- HTTP状态码：201 Created
- 响应内容：
  {
    "success": true,
    "message": "注册成功，请查收激活邮件",
    "userId": "新用户ID",
    "activationRequired": true
  }

注册失败：
- HTTP状态码：400/409/500
- 响应内容：
  {
    "success": false,
    "error": "错误类型",
    "message": "详细错误信息",
    "field": "出错字段名（如适用）"
  }

==================================================
四、业务流程
==================================================
1. 用户访问注册页面填写信息
2. 前端进行实时表单验证
3. 提交注册请求到后端API
4. 后端验证请求参数完整性和格式
5. 进行业务规则验证（密码强度等）
6. 检查用户名是否已存在
7. 检查邮箱是否已被注册
8. 密码加密处理（BCrypt）
9. 开始数据库事务
10. 创建用户基本信息记录
11. 根据角色创建学生或教师详细信息
12. 提交事务
13. 生成账户激活码
14. 发送激活邮件到用户邮箱
15. 返回注册成功结果

==================================================
五、异常处理
==================================================
1. 参数验证失败（400）
   - 必填字段为空
   - 字段格式不正确
   - 密码确认不匹配
   - 密码强度不符合要求

2. 用户名冲突（409）
   - 用户名已被其他用户使用

3. 邮箱冲突（409）
   - 邮箱已被其他用户注册

4. 业务规则违反（400）
   - 密码强度不够
   - 邮箱格式错误
   - 手机号格式错误
   - 角色选择无效

5. 系统异常（500）
   - 数据库连接失败
   - 事务提交失败
   - 邮件发送失败

==================================================
六、安全要求
==================================================
1. 密码安全：
   - 最小长度6位，推荐8位以上
   - 必须包含大小写字母、数字
   - 使用BCrypt加密存储
   - 防止弱密码注册

2. 输入安全：
   - 所有输入进行XSS防护
   - SQL注入防护
   - 输入长度限制
   - 特殊字符过滤

3. 重复注册防护：
   - 用户名唯一性检查
   - 邮箱唯一性检查
   - 短时间内重复提交限制

4. 验证机制：
   - 邮箱激活验证
   - 激活码有效期限制
   - 激活链接一次性使用

==================================================
七、性能要求
==================================================
1. 响应时间：正常情况下5秒内完成
2. 并发处理：支持500个并发注册请求
3. 数据库性能：
   - 用户名和邮箱字段建立唯一索引
   - 事务处理优化
4. 邮件发送：异步处理避免阻塞

==================================================
八、相关API接口
==================================================
注册接口：
地址：POST /api/auth/register
请求头：Content-Type: application/json
请求体：
{
  "username": "用户名",
  "password": "密码",
  "confirmPassword": "确认密码",
  "realName": "真实姓名",
  "email": "邮箱地址",
  "phone": "手机号码",
  "role": "角色(STUDENT/TEACHER)"
}

激活接口：
地址：GET /api/auth/activate?code=激活码
功能：激活用户账户

==================================================
九、邮件模板内容
==================================================
主题：【课程排课系统】账户激活通知

内容：
亲爱的 {realName}：

感谢您注册课程排课系统！

请点击以下链接激活您的账户：
{activationLink}

激活码：{activationCode}
（该链接48小时内有效，请尽快激活）

如果您没有注册过该账户，请忽略此邮件。

课程排课系统团队

==================================================
十、数据表涉及
==================================================
主要表：
1. users表：
   - 存储用户基本信息和认证信息
   - 字段：id, username, password, email, phone, role, status, created_at

2. students表（角色为学生时）：
   - 存储学生详细信息
   - 字段：id, user_id, student_number, grade, major, class_name

3. teachers表（角色为教师时）：
   - 存储教师详细信息  
   - 字段：id, user_id, teacher_number, department, title, office

4. activation_codes表：
   - 存储激活码信息
   - 字段：id, user_id, code, expires_at, used_at

约束条件：
- username：唯一索引
- email：唯一索引
- 外键关联：students.user_id -> users.id
- 外键关联：teachers.user_id -> users.id 