@startuml 用户登录类图
title 用户登录功能类图

class AuthController {
    - AuthService authService
    - TeacherClassService teacherRepository
    - UserService userService
    + login(LoginDTO, HttpSession): AuthResponseDTO
    + getCurrentUser(HttpSession): AuthResponseDTO
    + register(UserCreateDTO, HttpSession): AuthResponseDTO
}
class AuthService {
    - UserRepository userRepository
    - PasswordEncoder passwordEncoder
    + authenticate(LoginDTO): User
    + getCurrentUser(): User
}
class LoginDTO {
    - String username
    - String password
    + getUsername(): String
    + setUsername(String): void
    + getPassword(): String
    + setPassword(String): void
}
class AuthResponseDTO {
    - Long userId
    - String username
    - String real_name
    - Role role
    - Long roleId
    - String roleType
    + AuthResponseDTO(User)
    + getUserId(): Long
    + getUsername(): String
    + getRealName(): String
    + getRole(): Role
    + getRoleId(): Long
    + getRoleType(): String
}
class User {
    - Long id
    - String username
    - String password
    - String realName
    - Role role
    - LocalDateTime createdAt
    - LocalDateTime updatedAt
    - Student student
    - Teacher teacher
    + getRoleId(): long
    + setRole(Role): void
    + getRole(): Role
}
enum Role {
    student
    teacher
    admin
}
class Student {
    - Long id
    - User user
    - String grade
    - String className
    - List<CourseSelection> courseSelections
}
class Teacher {
    - Long id
    - User user
    - String title
    - String department
}
interface UserRepository {
    + findByUsername(String): Optional<User>
    + findWithStudentById(Long): Optional<User>
    + findWithTeacherById(Long): Optional<User>
    + searchUsers(String, Pageable): Page<User>
}
class SecurityConfig {
    + passwordEncoder(): PasswordEncoder
}
interface PasswordEncoder {
    + encode(CharSequence): String
    + matches(CharSequence, String): boolean
}

AuthController --> AuthService : 依赖
AuthController --> LoginDTO : 使用
AuthController --> AuthResponseDTO : 返回

AuthService --> UserRepository : 依赖
AuthService --> PasswordEncoder : 依赖
AuthService --> User : 返回

LoginDTO --> AuthController : 输入参数
AuthResponseDTO --> User : 构造参数

User --> Role : 包含
User --> Student : 一对一
User --> Teacher : 一对一

UserRepository --> User : 管理

SecurityConfig --> PasswordEncoder : 配置

@enduml 