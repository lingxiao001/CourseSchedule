功能名称：个人信息修改
功能编号：04
所属模块：通用模块

==================================================
一、功能概述
==================================================
个人信息修改功能允许已登录用户查看和更新自己的个人资料。系统支持修改基本信息（如邮箱、手机号、真实姓名）和角色特定信息（如学生的专业班级、教师的部门职称等）。

==================================================
二、功能输入
==================================================
可修改的基本信息：
- realName（真实姓名）：字符串，长度2-50个字符
- email（邮箱）：符合邮箱格式，需唯一性检查
- phone（手机号）：11位数字，格式验证
- avatar（头像）：图片文件或URL链接

学生特定信息：
- major（专业）：字符串，长度2-100个字符
- grade（年级）：字符串，如"2023级"
- className（班级）：字符串，长度2-50个字符
- studentNumber（学号）：字符串，只读字段

教师特定信息：
- department（部门）：字符串，长度2-100个字符
- title（职称）：字符串，如"副教授"、"讲师"等
- office（办公室）：字符串，长度2-50个字符
- teacherNumber（工号）：字符串，只读字段

不可修改字段：
- username（用户名）：注册后不可修改
- role（角色）：系统分配，不可自行修改
- 工号/学号：由管理员分配，不可修改

==================================================
三、功能输出
==================================================
查看信息成功：
- HTTP状态码：200 OK
- 响应内容：
  {
    "user": {
      "id": "用户ID",
      "username": "用户名",
      "realName": "真实姓名",
      "email": "邮箱",
      "phone": "手机号",
      "role": "角色",
      "avatar": "头像URL"
    },
    "profile": {
      // 学生角色包含：major, grade, className, studentNumber
      // 教师角色包含：department, title, office, teacherNumber
    }
  }

修改信息成功：
- HTTP状态码：200 OK  
- 响应内容：
  {
    "success": true,
    "message": "个人信息修改成功",
    "updatedFields": ["修改的字段列表"]
  }

修改失败：
- HTTP状态码：400/409/500
- 响应内容：
  {
    "success": false,
    "error": "错误类型",
    "message": "错误详细信息",
    "field": "出错字段（如适用）"
  }

==================================================
四、业务流程
==================================================
查看个人信息流程：
1. 用户访问个人信息页面
2. 系统验证用户登录状态和令牌
3. 根据用户ID查询基本信息
4. 根据用户角色查询详细信息
5. 组装完整的用户资料返回
6. 前端展示个人信息表单

修改个人信息流程：
1. 用户在表单中修改信息
2. 前端进行实时表单验证
3. 提交修改请求到后端
4. 验证用户身份和权限
5. 验证修改参数格式和业务规则
6. 检查邮箱等唯一字段冲突
7. 开始数据库事务
8. 更新用户基本信息表
9. 更新角色特定信息表
10. 提交事务并记录操作日志
11. 返回修改结果

==================================================
五、异常处理
==================================================
1. 认证异常（401）
   - JWT令牌无效或过期
   - 用户未登录

2. 参数验证失败（400）
   - 必填字段为空
   - 邮箱格式不正确
   - 手机号格式错误
   - 字段长度超限

3. 业务规则违反（400）
   - 真实姓名格式不符合要求
   - 角色特定信息格式错误

4. 数据冲突（409）
   - 邮箱已被其他用户使用
   - 唯一性约束冲突

5. 权限不足（403）
   - 尝试修改不可编辑字段
   - 尝试修改其他用户信息

6. 系统异常（500）
   - 数据库连接失败
   - 事务提交失败
   - 文件上传失败（头像）

==================================================
六、验证规则
==================================================
基本信息验证：
- 真实姓名：2-50字符，支持中英文
- 邮箱：标准邮箱格式，域名验证
- 手机号：中国大陆11位手机号格式
- 头像：支持jpg/png/gif，大小不超过2MB

学生信息验证：
- 专业：2-100字符，中英文数字
- 年级：格式如"2023级"
- 班级：2-50字符，支持数字和字母

教师信息验证：
- 部门：2-100字符，中英文
- 职称：预定义列表选择
- 办公室：2-50字符，支持楼层房间号格式

安全验证：
- 所有输入XSS防护
- SQL注入防护
- 文件类型验证（头像上传）

==================================================
七、安全要求
==================================================
1. 身份验证：
   - 必须登录才能访问
   - JWT令牌验证
   - 只能修改自己的信息

2. 输入安全：
   - 所有输入进行过滤和验证
   - 防XSS攻击
   - 防SQL注入

3. 数据安全：
   - 邮箱唯一性验证
   - 敏感信息脱敏显示
   - 修改操作记录日志

4. 文件安全（头像上传）：
   - 文件类型白名单
   - 文件大小限制
   - 病毒扫描
   - 安全存储路径

==================================================
八、性能要求
==================================================
1. 响应时间：
   - 查看信息：2秒内响应
   - 修改信息：3秒内完成
   - 头像上传：5秒内完成

2. 并发处理：
   - 支持1000个并发查看请求
   - 支持200个并发修改请求

3. 数据库优化：
   - 用户ID主键索引
   - 邮箱唯一索引
   - 外键关联优化

4. 缓存策略：
   - 用户基本信息缓存
   - 头像文件CDN缓存

==================================================
九、相关API接口
==================================================
查看个人信息：
地址：GET /api/user/profile
请求头：Authorization: Bearer {token}
响应：用户完整信息

修改个人信息：
地址：PUT /api/user/profile
请求头：Authorization: Bearer {token}
请求体：
{
  "realName": "新的真实姓名",
  "email": "新邮箱",
  "phone": "新手机号",
  "profile": {
    // 角色特定字段
  }
}

头像上传：
地址：POST /api/user/avatar
请求头：Authorization: Bearer {token}
请求体：FormData with file
响应：头像URL

==================================================
十、数据表涉及
==================================================
主要表：
1. users表：
   - 存储用户基本信息
   - 修改字段：real_name, email, phone, avatar
   - 不可修改：username, role, password

2. students表（学生用户）：
   - 存储学生详细信息
   - 修改字段：major, grade, class_name
   - 不可修改：student_number

3. teachers表（教师用户）：
   - 存储教师详细信息
   - 修改字段：department, title, office
   - 不可修改：teacher_number

4. user_logs表：
   - 记录用户信息修改日志
   - 字段：user_id, action, old_value, new_value, timestamp

关联关系：
- students.user_id -> users.id
- teachers.user_id -> users.id
- user_logs.user_id -> users.id

==================================================
十一、操作日志
==================================================
记录内容：
- 操作用户ID和用户名
- 操作时间戳
- 修改的字段名称
- 修改前的值（敏感信息脱敏）
- 修改后的值（敏感信息脱敏）
- 操作IP地址
- 操作结果（成功/失败）

日志格式：
```
[2024-01-15 10:30:25] User(ID:123, Name:张三) 
修改个人信息 IP:192.168.1.100
Changed: email(old:***@old.com -> new:***@new.com)
Changed: phone(old:138****1234 -> new:139****5678)
Result: SUCCESS
```

==================================================
十二、前端交互说明
==================================================
页面元素：
1. 个人信息展示区域
2. 编辑表单（可切换只读/编辑模式）
3. 头像上传组件
4. 保存/取消按钮
5. 修改历史记录（可选）

交互流程：
1. 页面加载时获取并显示当前信息
2. 点击编辑按钮进入编辑模式
3. 实时表单验证和错误提示
4. 保存前确认修改内容
5. 保存成功后显示成功提示并刷新信息
6. 支持取消操作恢复原始值 