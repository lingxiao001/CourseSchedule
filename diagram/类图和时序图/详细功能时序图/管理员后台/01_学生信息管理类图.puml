@startuml

title 学生信息管理类图

package Controller {
    class AdminUserController {
        + getUsers(pageable, search): Page<UserDTO>
        + createUser(dto: UserCreateDTO): UserDTO
        + updateUser(userId, dto: UserUpdateDTO): UserDTO
        + deleteUser(userId): void
        - userService: UserService
    }
}

package Service {
    class UserService {
        + getAllUsers(search, pageable): Page<User>
        + createUser(dto: UserCreateDTO): User
        + updateUser(userId, dto: UserUpdateDTO): User
        + deleteUser(userId): void
        - userRepository: UserRepository
        - studentRepository: StudentRepository
        - passwordEncoder: PasswordEncoder
    }
}

package Repository {
    interface UserRepository
    interface StudentRepository
}

package DTO {
    class UserCreateDTO {
        ' username, password, realName, role,
        ' studentId, grade, className, ...
    }
    class UserUpdateDTO {
        ' realName, newPassword, role,
        ' grade, className, ...
    }
    class UserDTO {
        ' id, username, realName, role, ...
        + fromUser(user: User): UserDTO
    }
}

package Entity {
    class User {
        - id: Long
        - username: String
        - password: String
        - realName: String
        - role: Role
        - student: Student
    }
    enum Role {
        student, teacher, admin
    }
    class Student {
        - id: Long
        - grade: String
        - className: String
        - user: User
    }
}

' --- 关系 ---

AdminUserController ..> UserService : uses
AdminUserController ..> UserCreateDTO : uses
AdminUserController ..> UserUpdateDTO : uses
AdminUserController ..> UserDTO : uses

UserService ..> UserRepository : uses
UserService ..> StudentRepository : uses
UserService ..> UserCreateDTO : uses
UserService ..> UserUpdateDTO : uses

UserService ..> User : creates/updates
UserService ..> Student : creates/updates

UserDTO ..> User : created from

User "1" -- "1" Student : has
Student "1" -- "1" User : belongs to

User ..> Role

@enduml 