用户登录功能详细描述

功能概述：
用户登录功能是系统的核心认证功能，支持学生、教师和管理员三种角色的身份验证，通过用户名和密码的方式进行登录验证。

主要参与者：
1. 用户（学生/教师/管理员）
2. 前端界面
3. 认证控制器（AuthController）
4. 认证服务（AuthService）
5. 用户服务（UserService）
6. 用户仓库（UserRepository）
7. 密码编码器（PasswordEncoder）
8. Session管理器（SessionManager）
9. 数据库

详细流程描述：

1. 输入验证阶段：
   - 用户在登录界面输入用户名和密码
   - 前端进行基础的输入格式验证，确保用户名和密码不为空
   - 如果输入格式错误，直接在前端显示错误提示

2. 身份认证阶段：
   - 前端将登录信息封装成LoginDTO发送到后端认证控制器
   - 认证控制器调用认证服务进行身份验证
   - 认证服务通过用户服务查询用户信息
   - 用户服务通过用户仓库从数据库中查找用户记录

3. 密码验证阶段：
   - 如果用户存在，使用密码编码器验证原始密码与数据库中的加密密码
   - 验证密码的同时检查用户账户状态（是否被禁用）
   - 如果用户不存在或密码错误，返回相应的错误信息

4. 会话创建阶段：
   - 验证成功后，通过Session管理器创建用户会话
   - 在会话中保存用户信息，用于后续的权限验证
   - 构建包含用户信息和角色的响应DTO返回给前端

5. 前端处理阶段：
   - 前端接收到登录成功响应后，将用户信息保存到本地存储
   - 根据用户的角色类型进行页面跳转：
     * 学生角色：跳转到学生中心
     * 教师角色：跳转到教师工作台
     * 管理员角色：跳转到管理员后台

异常处理机制：
1. 输入格式错误：前端直接显示输入提示
2. 用户不存在：返回401状态码，显示"用户名或密码错误"
3. 密码错误：返回401状态码，显示"用户名或密码错误"
4. 用户被禁用：返回403状态码，显示"用户账户已被禁用"

安全机制：
1. 密码采用加密存储，验证时使用密码编码器
2. 登录失败时记录日志，便于安全审计
3. 用户信息统一通过"用户名或密码错误"提示，避免泄露用户是否存在
4. 通过Session机制维护用户登录状态

业务规则：
1. 用户名和密码都必须提供
2. 用户账户必须处于启用状态
3. 每个用户只能有一个活跃会话
4. 不同角色用户登录后跳转到对应的工作台

技术实现要点：
1. 使用DTO模式传输登录数据
2. 采用服务层模式分离业务逻辑
3. 使用仓库模式进行数据访问
4. 通过Session管理用户状态
5. 前后端通过RESTful API通信 